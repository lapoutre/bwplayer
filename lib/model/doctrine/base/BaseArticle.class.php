<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property clob $body
 * @property string $pic
 * @property Doctrine_Collection $Comments
 * 
 * @method string              getTitle()    Returns the current record's "title" value
 * @method clob                getBody()     Returns the current record's "body" value
 * @method string              getPic()      Returns the current record's "pic" value
 * @method Doctrine_Collection getComments() Returns the current record's "Comments" collection
 * @method Article             setTitle()    Sets the current record's "title" value
 * @method Article             setBody()     Sets the current record's "body" value
 * @method Article             setPic()      Sets the current record's "pic" value
 * @method Article             setComments() Sets the current record's "Comments" collection
 * 
 * @package    bwrecords
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('pic', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}