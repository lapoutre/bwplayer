<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nick
 * @property clob $message
 * @property boolean $is_approved
 * @property integer $article_id
 * @property Article $Article
 * 
 * @method string  getNick()        Returns the current record's "nick" value
 * @method clob    getMessage()     Returns the current record's "message" value
 * @method boolean getIsApproved()  Returns the current record's "is_approved" value
 * @method integer getArticleId()   Returns the current record's "article_id" value
 * @method Article getArticle()     Returns the current record's "Article" value
 * @method Comment setNick()        Sets the current record's "nick" value
 * @method Comment setMessage()     Sets the current record's "message" value
 * @method Comment setIsApproved()  Sets the current record's "is_approved" value
 * @method Comment setArticleId()   Sets the current record's "article_id" value
 * @method Comment setArticle()     Sets the current record's "Article" value
 * 
 * @package    bwrecords
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('nick', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('message', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('is_approved', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => true,
             ));
        $this->hasColumn('article_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Article', array(
             'local' => 'article_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}