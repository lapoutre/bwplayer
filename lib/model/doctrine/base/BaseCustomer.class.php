<?php

/**
 * BaseCustomer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $email
 * @property string $product_name
 * @property clob $address
 * @property string $tel
 * @property boolean $is_transaction_done
 * 
 * @method string   getEmail()               Returns the current record's "email" value
 * @method string   getProductName()         Returns the current record's "product_name" value
 * @method clob     getAddress()             Returns the current record's "address" value
 * @method string   getTel()                 Returns the current record's "tel" value
 * @method boolean  getIsTransactionDone()   Returns the current record's "is_transaction_done" value
 * @method Customer setEmail()               Sets the current record's "email" value
 * @method Customer setProductName()         Sets the current record's "product_name" value
 * @method Customer setAddress()             Sets the current record's "address" value
 * @method Customer setTel()                 Sets the current record's "tel" value
 * @method Customer setIsTransactionDone()   Sets the current record's "is_transaction_done" value
 * 
 * @package    bwrecords
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCustomer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contact');
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('product_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('address', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('tel', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_transaction_done', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}